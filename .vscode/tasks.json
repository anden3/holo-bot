{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "presentation": {
        "echo": true,
        "reveal": "silent",
        "focus": false,
        "panel": "shared",
        "showReuseMessage": true,
        "clear": false
    },
    "inputs": [
        {
            "id": "profile",
            "description": "What level of optimization to do.",
            "type": "pickString",
            "options": [
                "debug",
                "release"
            ],
            "default": "debug"
        },
        {
            "id": "environment",
            "description": "What environment to run this bot in.",
            "type": "pickString",
            "options": [
                "development",
                "production"
            ],
            "default": "development"
        }
    ],
    "tasks": [
        {
            "label": "Build (Dev)",
            "type": "shell",
            "command": "./scripts/build.sh",
            "args": [
                "--profile=debug",
                "--environment=development"
            ],
            "problemMatcher": [
                "$rustc"
            ],
            "group": "none"
        },
        {
            "label": "Build",
            "type": "shell",
            "command": "./scripts/build.sh",
            "args": [
                "--profile=${input:profile}",
                "--environment=${input:environment}",
                "--prod_arch=${config:TARGET_ARCH}"
            ],
            "options": {
                "env": {
                    "SQLITE3_LIB_DIR": "${workspaceFolder}/Libraries/sqlite3/lib",
                    "OPUS_NO_PKG": "true",
                    "OPUS_STATIC": "true",
                    "CFLAGS_armv7_unknown_linux_musleabihf": "-mfpu=neon-fp-armv8",
                    "CFLAGS_aarch64_unknown_linux_gnu": "-mcpu=cortex-a72 -mtune=cortex-a72",
                    "CFLAGS_aarch64_unknown_linux_musl": "-mcpu=cortex-a72 -mtune=cortex-a72"
                }
            },
            "problemMatcher": [
                "$rustc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Upload",
            "type": "shell",
            "command": "rsync",
            "args": [
                "-P",
                "${workspaceFolder}/target/${config:TARGET_ARCH}/${input:profile}/holo-bot",
                "settings/config.json",
                "settings/config.toml",
                "settings/talents.toml",
                "${config:TARGET_HOST}:${config:TARGET_PATH}"
            ],
            "dependsOn": "Build",
            "dependsOrder": "sequence",
            "problemMatcher": []
        },
        {
            "label": "Start Remotely",
            "type": "shell",
            "command": "ssh",
            "args": [
                "-t",
                "${config:TARGET_HOST}",
                "\"systemctl is-active --quiet ${config:TARGET_EXEC}.service && sudo systemctl stop ${config:TARGET_EXEC}.service; cd ${config:TARGET_PATH}; RUST_BACKTRACE=1 ./${config:TARGET_EXEC}\""
            ],
            "dependsOn": "Upload",
            "dependsOrder": "sequence",
            "problemMatcher": []
        },
        {
            "label": "Start as Service",
            "type": "shell",
            "command": "ssh",
            "args": [
                "-t",
                "${config:TARGET_HOST}",
                "\"systemctl is-active --quiet ${config:TARGET_EXEC}.service && sudo systemctl stop ${config:TARGET_EXEC}.service; sudo systemctl start ${config:TARGET_EXEC}.service; journalctl -f -u ${config:TARGET_EXEC}.service\""
            ],
            "dependsOn": "Upload",
            "dependsOrder": "sequence",
            "problemMatcher": []
        },
        {
            "label": "Attach to Remote",
            "type": "shell",
            "command": "ssh",
            "args": [
                "-t",
                "${config:TARGET_HOST}",
                "\"systemctl is-active --quiet ${config:TARGET_EXEC}.service && journalctl -f -u ${config:TARGET_EXEC}.service\""
            ],
            "problemMatcher": []
        },
        {
            "label": "Benchmark",
            "type": "shell",
            "command": "cargo bench",
            "options": {
                "env": {
                    "OPUS_NO_PKG": "true",
                    "OPUS_STATIC": "true",
                }
            },
            "problemMatcher": []
        },
        {
            "label": "Test",
            "type": "shell",
            "command": "cargo test",
            "options": {
                "env": {
                    "OPUS_NO_PKG": "true",
                    "OPUS_STATIC": "true",
                }
            },
            "problemMatcher": []
        },
    ]
}